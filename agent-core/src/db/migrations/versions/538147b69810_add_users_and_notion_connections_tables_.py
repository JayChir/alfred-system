"""Add users and notion_connections tables with encrypted token storage

Revision ID: 538147b69810
Revises:
Create Date: 2025-08-27 22:26:45.456349

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "538147b69810"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create CITEXT extension for case-insensitive text
    op.execute("CREATE EXTENSION IF NOT EXISTS citext")

    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", postgresql.CITEXT(), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "notion_connections",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("provider", sa.String(length=50), nullable=False),
        sa.Column("workspace_id", sa.String(length=255), nullable=False),
        sa.Column("bot_id", sa.String(length=255), nullable=True),
        sa.Column("scopes", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("access_token_ciphertext", sa.LargeBinary(), nullable=False),
        sa.Column("refresh_token_ciphertext", sa.LargeBinary(), nullable=True),
        sa.Column("access_token_expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "refresh_token_expires_at", sa.DateTime(timezone=True), nullable=True
        ),
        sa.Column("key_version", sa.SmallInteger(), nullable=False),
        sa.Column("revoked_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "user_id",
            "workspace_id",
            "provider",
            "bot_id",
            name="uq_nc_user_ws_provider_bot",
        ),
    )
    op.create_index(
        "ix_nc_active",
        "notion_connections",
        ["user_id", "workspace_id"],
        unique=False,
        postgresql_where=sa.text("revoked_at IS NULL"),
    )
    op.create_index("ix_nc_user_id", "notion_connections", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_nc_user_id", table_name="notion_connections")
    op.drop_index(
        "ix_nc_active",
        table_name="notion_connections",
        postgresql_where=sa.text("revoked_at IS NULL"),
    )
    op.drop_table("notion_connections")
    op.drop_table("users")

    # Note: Not dropping CITEXT extension as other parts of the system might use it
    # op.execute("DROP EXTENSION IF EXISTS citext")
    # ### end Alembic commands ###
