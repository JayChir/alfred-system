"""Add token refresh tracking to NotionConnection

Revision ID: b28bb837a674
Revises: 564c141b5690
Create Date: 2025-08-28 15:55:45.676984

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b28bb837a674"
down_revision: Union[str, Sequence[str], None] = "564c141b5690"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "oauth_states",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("state", sa.String(length=128), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("session_id", sa.String(length=255), nullable=True),
        sa.Column("provider", sa.String(length=50), nullable=False),
        sa.Column("return_to", sa.String(length=2048), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("used_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("state"),
    )
    op.create_index(
        "ix_oauth_state_expires", "oauth_states", ["expires_at"], unique=False
    )
    op.create_index(
        "ix_oauth_state_provider_created",
        "oauth_states",
        ["provider", "created_at"],
        unique=False,
    )
    op.create_index("ix_oauth_state_token", "oauth_states", ["state"], unique=False)
    op.add_column(
        "notion_connections",
        sa.Column("supports_refresh", sa.Boolean(), nullable=False),
    )
    op.add_column(
        "notion_connections",
        sa.Column("last_refresh_attempt", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "notion_connections",
        sa.Column("refresh_failure_count", sa.SmallInteger(), nullable=False),
    )
    op.add_column(
        "notion_connections", sa.Column("needs_reauth", sa.Boolean(), nullable=False)
    )
    # Preserve existing indexes/constraints from previous migrations:
    # - ix_nc_workspace_id (performance optimization)
    # - uq_nc_user_ws_provider_bot_coalesced (handles NULL bot_id correctly)
    # These were added in migration 564c141b5690 and should not be dropped
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Don't recreate indexes since we're not dropping them in upgrade anymore
    op.drop_column("notion_connections", "needs_reauth")
    op.drop_column("notion_connections", "refresh_failure_count")
    op.drop_column("notion_connections", "last_refresh_attempt")
    op.drop_column("notion_connections", "supports_refresh")
    op.drop_index("ix_oauth_state_token", table_name="oauth_states")
    op.drop_index("ix_oauth_state_provider_created", table_name="oauth_states")
    op.drop_index("ix_oauth_state_expires", table_name="oauth_states")
    op.drop_table("oauth_states")
    # ### end Alembic commands ###
